[{"/home/ly/mining-graph/src/index.js":"1","/home/ly/mining-graph/src/reportWebVitals.js":"2","/home/ly/mining-graph/src/App.js":"3","/home/ly/mining-graph/src/sectorLife/sectors.js":"4","/home/ly/mining-graph/src/sectorLife/list.js":"5","/home/ly/mining-graph/src/sectorLife/sectorState.js":"6","/home/ly/mining-graph/src/domain.js":"7","/home/ly/mining-graph/src/util.js":"8"},{"size":500,"mtime":1606987241660,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606959198359,"results":"11","hashOfConfig":"10"},{"size":339,"mtime":1607066856047,"results":"12","hashOfConfig":"10"},{"size":1464,"mtime":1607425387017,"results":"13","hashOfConfig":"10"},{"size":4587,"mtime":1607427742547,"results":"14","hashOfConfig":"10"},{"size":3955,"mtime":1607006028654,"results":"15","hashOfConfig":"10"},{"size":141,"mtime":1607322360313,"results":"16","hashOfConfig":"10"},{"size":1470,"mtime":1607140351868,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1q479ms",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"/home/ly/mining-graph/src/index.js",[],["38","39"],"/home/ly/mining-graph/src/reportWebVitals.js",[],"/home/ly/mining-graph/src/App.js",["40"],"import './App.css';\nimport { Layout } from 'antd';\nimport SectorView from './sectorLife/sectors'\n\nconst { Header, Content } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <>\n      <Layout>\n        <Content>\n          <SectorView/>\n        </Content>\n      </Layout>\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ly/mining-graph/src/sectorLife/sectors.js",[],"/home/ly/mining-graph/src/sectorLife/list.js",["41","42"],"/home/ly/mining-graph/src/sectorLife/sectorState.js",["43","44"],"/home/ly/mining-graph/src/domain.js",[],"/home/ly/mining-graph/src/util.js",["45","46","47","48","49","50"],"\nexport function timing(time = +new Date()) {\n    var date = new Date(time + 8 * 3600 * 1000);\n    return date.toJSON().substr(0,19).replace('T', ' ');\n}\n\n\n/**\n * JS 计算两个时间间隔多久（时分秒）\n * @param startTime \"2019-10-23 15:27:23\"\n * @param endTime \"2019-10-23 15:27:55\"\n * @return 1天2时3分5秒\n */\n\nexport function twoTimeInterval(startTime, endTime) {\n \n    // 开始时间\n    let d1 = startTime.replace(/\\-/g, \"/\");\n    let date1 = new Date(d1);\n   \n    // 结束时间\n    let d2 = endTime.replace(/\\-/g, \"/\");\n    let date2 = new Date(d2);\n   \n    // 时间相差秒数\n    let dateDiff = date2.getTime() - date1.getTime();\n   \n    // 计算出相差天数\n    let days = Math.floor(dateDiff / (24 * 3600 * 1000));\n   \n    // 计算出小时数\n    let residue1 = dateDiff % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数\n    let hours = Math.floor(residue1 / (3600 * 1000));\n   \n    // 计算相差分钟数\n    let residue2 = residue1 % (3600 * 1000); // 计算小时数后剩余的毫秒数\n    let minutes = Math.floor(residue2 / (60 * 1000));\n   \n    // 计算相差秒数\n    let residue3 = residue2 % (60 * 1000); // 计算分钟数后剩余的毫秒数\n    let seconds = Math.round(residue3 / 1000);\n   \n    let returnVal =\n      ((days == 0) ? \"\" : days+\"D\") +\n      ((hours == 0) ? \"\" : days+\"H\") +\n      ((minutes == 0) ? \"\" : minutes+\"M\") +\n      ((seconds == 0) ? \"\" : seconds+\"S\");\n   \n    return returnVal;\n   \n}",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":9,"nodeType":"59","messageId":"60","endLine":5,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":14,"column":5,"nodeType":"63","messageId":"64","endLine":16,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":142,"column":28,"nodeType":"67","messageId":"68","endLine":142,"endColumn":30},{"ruleId":"57","severity":1,"message":"69","line":1,"column":5,"nodeType":"59","messageId":"60","endLine":1,"endColumn":11},{"ruleId":"70","severity":2,"message":"71","line":52,"column":16,"nodeType":"59","messageId":"72","endLine":52,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":18,"column":33,"nodeType":"75","messageId":"76","endLine":18,"endColumn":34,"suggestions":"77"},{"ruleId":"73","severity":1,"message":"74","line":22,"column":31,"nodeType":"75","messageId":"76","endLine":22,"endColumn":32,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"66","line":44,"column":14,"nodeType":"67","messageId":"68","endLine":44,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":45,"column":15,"nodeType":"67","messageId":"68","endLine":45,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":46,"column":17,"nodeType":"67","messageId":"68","endLine":46,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":47,"column":17,"nodeType":"67","messageId":"68","endLine":47,"endColumn":19},{"ruleId":"53","replacedBy":"79"},{"ruleId":"55","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'states' is assigned a value but never used.","no-undef","'SectorStates' is not defined.","undef","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["83","84"],["85","86"],["81"],["82"],"no-global-assign","no-unsafe-negation",{"messageId":"87","fix":"88","desc":"89"},{"messageId":"90","fix":"91","desc":"92"},{"messageId":"87","fix":"93","desc":"89"},{"messageId":"90","fix":"94","desc":"92"},"removeEscape",{"range":"95","text":"96"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"97","text":"98"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"99","text":"96"},{"range":"100","text":"98"},[389,390],"",[389,389],"\\",[477,478],[477,477]]